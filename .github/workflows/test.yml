name: Run API Jest Tests

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ""  # Hier wird kein Root-Passwort benötigt
          MYSQL_USER: ${{ secrets.DB_USERNAME }}     # Benutzername für MySQL
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }} # Passwort für den MySQL-Benutzer
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}     # Name der Datenbank
        ports:
          - 3306:3306

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21.7.1

      - name: Install API dependencies
        run: npm install
        working-directory: ./  # Passe diesen Pfad an, falls notwendig

      - name: Create .env.test.local
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env.test.local
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env.test.local # Hier das Secret verwenden
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env.test.local
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.test.local
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env.test.local
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env.test.local
          echo "LOG_LEVEL=${{ secrets.LOG_LEVEL }}" >> .env.test.local

      - name: Wait for MySQL
        run: |
            export MYSQL_PWD="${{ secrets.DB_PASSWORD }}"
            max_attempts=5
            attempt=0
            while [[ $attempt -lt $max_attempts ]]; do
              if mysql -h "${{ secrets.DB_HOST }}" -u"${{ secrets.DB_USERNAME }}" -p"${MYSQL_PWD}" -e "SELECT 1;" &> /dev/null; then
                echo "MySQL is up and running!"
                break
              else
                echo "Waiting for MySQL... Attempt $((attempt+1)) of $max_attempts"
                attempt=$((attempt + 1))
                sleep 10
              fi
            done
        
            if [[ $attempt -eq $max_attempts ]]; then
              echo "MySQL did not start in time!"
              exit 1
            fi



      - name: Setup Database with SQL script
        run: |
          echo "Setting up the database structure..."
          mysql -h "${{ secrets.DB_HOST }}" -u"${{ secrets.DB_USERNAME }}" "${{ secrets.DB_NAME }}" < db_script/test_veranstaltungskalender_ford_fiesta.sql

      - name: Run Jest tests
        run: npm run test
        working-directory: ./  # Passe diesen Pfad an, falls notwendig
